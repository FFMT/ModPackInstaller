apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:5.2.1'
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://libraries.minecraft.net/"
    }
    maven {
        url "http://files.minecraftforgefrance.fr/maven/"
    }
    flatDir {
        name "fileRepo"
        dirs "repo"
    }
}

group = 'net.minecraftforgefrance'
archivesBaseName = 'installer'
version = '2.2.1'
targetCompatibility = '1.6'
sourceCompatibility = '1.6'

dependencies {
    compile 'net.sf.jopt-simple:jopt-simple:4.5'
    compile 'net.sourceforge.argo:argo:3.7'
    compile 'com.google.guava:guava:14.0'
    compile 'org.tukaani:xz:1.3'
    compile 'net.minecraft:launchwrapper:1.12'
    compile 'utybo:minkj:1.1'
}

task fatJar(type: Jar, dependsOn: jar) {
    inputs.file jar.archivePath
    from(configurations.compile.collect { zipTree(it).matching { include '**/*.class' } })
	manifest { attributes 'Main-Class': 'fr.minecraftforgefrance.installer.Installer' }
}

fatJar.doFirst {
    from zipTree(jar.archivePath)
}

task shrinkJar(type: proguard.gradle.ProGuardTask, dependsOn: jar) {
    inputs.file fatJar.archivePath
    ext {
        outDir = file("${buildDir}/proguard")
        obfuscatedJar = "${outDir}/${jar.baseName}.jar"
    }
    outDir.mkdirs()

    injars jar.archivePath
    outjars obfuscatedJar
    libraryjars configurations.compile
    configuration 'proguard.pro'
}

task shrinkOutput(type: Jar, dependsOn: shrinkJar) {
    classifier = 'shrunk'
    from zipTree(shrinkJar.obfuscatedJar)
    manifest { attributes 'Main-Class': 'fr.minecraftforgefrance.installer.Installer' }
}

task updaterJar(type: Jar, dependsOn: "jar"){
    from project.sourceSets.main.output
        archiveName = "updater-${project.version}-thin.jar"
        include "fr/minecraftforgefrance/updater/**"
        include "fr/minecraftforgefrance/common/**"
		include "langs/**"
}

task fullUpdaterJar(type: Jar, dependsOn: "updaterJar"){
    inputs.file jar.archivePath
    from(configurations.compile.collect { zipTree(it).matching { 
	    include 'org/tukaani/**/*.class'
	    include 'utybo/minkj/**/*.class'
	    include 'argo/**/*.class'
	}})
    archiveName = "updater-${project.version}.jar"
}

fullUpdaterJar.doFirst {
    from zipTree(updaterJar.archivePath)
}

artifacts {
    archives fatJar
    archives shrinkOutput
    archives updaterJar
    archives fullUpdaterJar
}

jar {
    classifier = 'thin'
    exclude 'argo/**'
	exclude 'fr/minecraftforgefrance/updater/**'
    manifest { attributes 'Main-Class': 'fr.minecraftforgefrance.installer.Installer' }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
